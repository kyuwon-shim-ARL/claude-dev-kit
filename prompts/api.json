{
  "version": "2.2.0",
  "updated": "2025-01-18",
  "prompts": {
    "기획": {
      "description": "구조화된 탐색-계획 루프",
      "text": "프로젝트 기획을 진행해줘.\n\n구조화된 탐색-계획 루프를 실행하세요:\n1. **탐색 (Discovery)**: 전체 코드베이스 구조를 분석하고, 현재 상태(As-Is)와 목표 상태(To-Be)를 파악한 후 격차(Gap)를 명확히 식별해주세요.\n2. **계획 (Planning)**: MECE 원칙에 따라 작업을 분해하고(WBS), 우선순위 매트릭스를 만들며, 실현 가능성을 검토해주세요.\n3. **수렴 (Convergence)**: 탐색과 계획을 반복하여 일관되고 완전한 PRD(Product Requirements Document)가 완성될 때까지 진행해주세요.\n4. **구조화**: TodoWrite를 사용하여 MECE 원칙에 따라 모든 작업을 체계적으로 정리해주세요.\n\n결과물로는 명확한 목표, 구체적인 실행 계획, 그리고 우선순위가 정해진 작업 목록을 제공해주세요."
    },
    "구현": {
      "description": "DRY 원칙 기반 구현",
      "text": "구현을 진행해줘.\n\nDRY(Don't Repeat Yourself) 원칙에 따라 구현하세요:\n1. **기존 코드 검색**: 비슷한 기능이 이미 구현되어 있는지 철저히 검색해주세요.\n2. **재사용 우선**: 기존 코드가 있다면 재사용하거나 확장해주세요.\n3. **새로운 구현**: 기존 코드가 없을 때만 새롭게 생성해주세요.\n4. **TodoWrite 활용**: 3단계 이상의 작업은 반드시 TodoWrite로 추적해주세요.\n5. **단위 테스트**: 구현한 기능에 대한 기본적인 검증을 포함해주세요.\n\n구현 시 다음 원칙을 지켜주세요:\n- 공유 유틸리티는 core/ 디렉토리에 배치\n- 명확한 인터페이스로 모듈 간 결합도 최소화\n- 모든 public 함수에 docstring 필수\n- Single Source of Truth: 동일 기능은 한 곳에만"
    },
    "안정화": {
      "description": "구조적 지속가능성 프로토콜 v2.0",
      "text": "안정화를 진행해줘.\n\n구조적 지속가능성 프로토콜 v2.0을 필수로 실행하세요. 단순한 코드 정리나 기본 테스트로 해석하지 말고, 다음 6단계를 완전히 수행해주세요:\n\n1. **Repository Structure Scan**: \n   - 전체 파일 분석 및 중복 파일 감지\n   - 의존성 매핑 및 순환 참조 확인\n   - 임시 파일(*.tmp, *.bak) 식별\n\n2. **Structural Optimization**:\n   - 파일을 기능별로 올바른 디렉토리에 분류\n   - 디렉토리 계층 구조 정리\n   - 명명 규칙 표준화 적용\n\n3. **Dependency Resolution**:\n   - Import 경로 수정 및 참조 오류 해결\n   - 환경 설정 동기화 (.env, requirements.txt 등)\n   - 외부 의존성 정리 및 최적화\n\n4. **Comprehensive Testing**:\n   - 모든 모듈 Import 검증 (순환참조 포함)\n   - API 엔드포인트 기능 테스트\n   - **웹 프로젝트인 경우**: Playwright E2E 테스트 필수 실행 (./scripts/test-web.sh 또는 uv run pytest src/web/tests/)\n   - **비웹 프로젝트**: 단위 테스트 + 통합 테스트 + import 검증\n   - 파일 이동 후 시스템 무결성 확인\n\n5. **Documentation Sync**:\n   - CLAUDE.md 구조 변경사항 반영\n   - README.md 업데이트\n   - .gitignore 정리 및 최적화\n\n6. **Quality Assurance**:\n   - MECE 분석으로 구조적 완전성 검증\n   - 성능 벤치마크 및 정량적 지표 측정\n   - 1-6단계를 구조적+기능적 이슈가 ZERO가 될 때까지 반복\n\n자동 트리거 조건: 루트 디렉토리 20개 이상 파일, 임시 파일 5개 이상, Import 오류 3개 이상, 매 5번째 커밋마다"
    },
    "배포": {
      "description": "최종 검증 및 원격 배포",
      "text": "배포를 진행해줘.\n\n다음 순서로 배포 프로세스를 완료해주세요:\n\n1. **최종 검증**:\n   - 모든 테스트 통과 확인\n   - Import 오류 0개 검증\n   - 임시 파일 정리 확인\n   - 루트 디렉토리 구조 점검\n\n2. **구조화된 커밋**:\n   - 의미 있는 커밋 메시지 작성\n   - 변경사항을 명확히 설명\n   - Co-Authored-By: Claude 포함\n\n3. **원격 배포**:\n   - git push로 원격 저장소에 업로드\n   - 필요시 버전 태그 생성 및 푸시\n\n4. **배포 완료 보고**:\n   - 배포된 주요 변경사항 요약\n   - 다음 단계 제안 (있을 경우)\n\n커밋 메시지는 다음 형식을 사용하세요:\n```\n[타입] 간결한 제목\n\n상세 설명\n- 주요 변경사항 1\n- 주요 변경사항 2\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\n```"
    }
  }
}