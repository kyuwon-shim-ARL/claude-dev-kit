{
  "button_text": "품질보증",
  "description": "안정화 → 배포 연속 실행",
  "message": "품질보증을 진행해줘.\n\n1. **안정화 단계**: 구조적 지속가능성 프로토콜 v2.0\n   구조적 지속가능성 프로토콜 v2.0을 필수로 실행하세요. 단순한 코드 정리나 기본 테스트로 해석하지 말고, 다음 6단계를 완전히 수행해주세요:\n\n1. **Repository Structure Scan**: \n   - 전체 파일 분석 및 중복 파일 감지\n   - 의존성 매핑 및 순환 참조 확인\n   - 임시 파일(*.tmp, *.bak) 식별\n\n2. **Structural Optimization**:\n   - 파일을 기능별로 올바른 디렉토리에 분류\n   - 디렉토리 계층 구조 정리\n   - 명명 규칙 표준화 적용\n\n3. **Dependency Resolution**:\n   - Import 경로 수정 및 참조 오류 해결\n   - 환경 설정 동기화 (.env, requirements.txt 등)\n   - 외부 의존성 정리 및 최적화\n\n4. **Comprehensive Testing**:\n   - 모든 모듈 Import 검증 (순환참조 포함)\n   - API 엔드포인트 기능 테스트\n   - **웹 프로젝트인 경우**: Playwright E2E 테스트 필수 실행 (./scripts/test-web.sh 또는 uv run pytest src/web/tests/)\n   - **비웹 프로젝트**: 단위 테스트 + 통합 테스트 + import 검증\n   - 파일 이동 후 시스템 무결성 확인\n\n5. **Documentation Sync**:\n   - CLAUDE.md 구조 변경사항 반영\n   - README.md 업데이트\n   - .gitignore 정리 및 최적화\n\n6. **Quality Assurance**:\n   - MECE 분석으로 구조적 완전성 검증\n   - 성능 벤치마크 및 정량적 지표 측정\n   - 1-6단계를 구조적+기능적 이슈가 ZERO가 될 때까지 반복\n\n자동 트리거 조건: 루트 디렉토리 20개 이상 파일, 임시 파일 5개 이상, Import 오류 3개 이상, 매 5번째 커밋마다\n\n2. **배포 단계**: 최종 검증 및 원격 배포\n   다음 순서로 배포 프로세스를 완료해주세요:\n\n1. **최종 검증**:\n   - 모든 테스트 통과 확인\n   - Import 오류 0개 검증\n   - 임시 파일 정리 확인\n   - 루트 디렉토리 구조 점검\n\n2. **구조화된 커밋**:\n   - 의미 있는 커밋 메시지 작성\n   - 변경사항을 명확히 설명\n   - Co-Authored-By: Claude 포함\n\n3. **원격 배포**:\n   - git push로 원격 저장소에 업로드\n   - 필요시 버전 태그 생성 및 푸시\n\n4. **배포 완료 보고**:\n   - 배포된 주요 변경사항 요약\n   - 다음 단계 제안 (있을 경우)\n\n커밋 메시지는 다음 형식을 사용하세요:\n```\n[타입] 간결한 제목\n\n상세 설명\n- 주요 변경사항 1\n- 주요 변경사항 2\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\n```"
}