{
  "button_text": "@구현",
  "description": "DRY 원칙에 따른 체계적 구현",
  "message": "⚡ **구현 (Implementation with DRY)**\n\n**📚 컨텍스트 자동 로딩:**\n- project_rules.md 확인 (있으면 읽기)\n- docs/CURRENT/active-todos.md 확인 (있으면 읽기)\n\n**DRY 원칙 적용:**\n- 기존 코드 검색: Grep, Glob 도구로 유사 기능 탐색\n- 재사용 우선: 기존 라이브러리/모듈/함수 활용\n- 없으면 생성: 새로운 컴포넌트 개발 시 재사용성 고려\n\n**체계적 진행:**\n- TodoWrite 기반 단계별 구현\n- 모듈화된 코드 구조 유지\n- 코딩 컨벤션 준수 (기존 코드 스타일 분석 후 적용)\n\n**품질 보증:**\n- 단위 테스트 작성 및 실행\n- 기본 검증: 문법 체크, 타입 체크, 린트\n- 동작 확인: 핵심 기능 동작 테스트\n\n**💾 자동 문서화:**\n- 구현 진행상황을 docs/CURRENT/implementation.md에 기록\n- TodoWrite 업데이트를 docs/CURRENT/active-todos.md에 반영\n\n**산출물:** 테스트 통과하는 동작 가능한 코드"
}